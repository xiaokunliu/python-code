the first version请求的url：http://domain/v1
WebAPP之 Json格式
json全部要以双引号"构成,客户端请求到服务器时需要先查看是否是以这样的规范来传递

1. 注册/登录(POST)
1)注册接口：/users/register?strJson=
2)登陆接口：/users/login?strJson=

请求的json格式数据
{
	"data":{}//pass the register or login request data 
}
返回的json格式
success
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}//这三个是必返回的
}

fail
{
	"code":fail code,//each fail code have it onwer means
	"desc":"fail",
	"result":{"msg":"the fail causes"}
}

server error,catch it by server itself
{
	"code":0,
	"desc":"error",
	"result":{"msg":""}
}

other server error,such as network,it would happen between client and the server,it return 500

2. 增删改(POST)
/moduleName/oprName?strJson=strJson
{
	"user_auth":"",
	"user_token":"",
	"data":[{k1:v1,...},...]
}

返回的json格式
success
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}//这三个是必返回的
}

fail
{
	"code":fail code,//each fail code have it onwer means
	"desc":"fail",
	"result":{"msg":"the fail causes"}
}

server error,catch it by server itself
{
	"code":0,
	"desc":"error",
	"result":{"msg":""}
}

other server error,such as network,it would happen between client and the server,it return 500

3.查询
1)不带分页的查询(GET请求)  多个查询
请求的url:/moduleName/queryWithNoPage?strJson=strJson(一般情况下是请求单个数据的查询)
strJson
{
	"user_auth":"",
	"user_token":"",
	"data":{
			"condition":{},
			"order_by":{},
			"optional_field":[]
			}
}

返回的json数据
success
{
	"code":200,
	"desc":"success",
	"result":{"dataList":[]}//model json data
}

fail
{
	"code":fail code,//each fail code have it onwer means
	"desc":"fail",
	"result":{"msg":"the fail causes"}
}

server error,catch it by server itself
{
	"code":0,
	"desc":"error",
	"result":{"msg":""}
}

other server error,such as network,it would happen between client and the server,it return 500

2)带分页查询    多个查询
/moduleName/queryWithPage?strJson=
strJson
{
	"user_auth":"",
	"user_token":"",
	"data":{
			"pageIndex":0,//default
			"pageSize":15//default
			"codition":{},
			"order_by":{},
			"optional_field":[]
			}
}
返回的json数据
success
{
	"code":200,
	"desc":"success",
	"result":{"dataList":[],"pageIndex":current_pageIndex,"pageSize":currentPageSize,"total":totalNum}//model json data
}

fail
{
	"code":fail code,//each fail code have it onwer means
	"desc":"fail",
	"result":{"msg":"the fail causes"}
}

server error,catch it by server itself
{
	"code":0,
	"desc":"error",
	"result":{"msg":""}
}

3)/moduleName/queryWithSingle?strJson=  (单个查询)
strJson
{
	"user_auth":"",
	"user_token":"",
	"data":{
			## query condition
			}
}
返回的json数据
success
{
	"code":200,
	"desc":"success",
	"result":{"dataList":[],"pageIndex":current_pageIndex,"pageSize":currentPageSize,"total":totalNum}//model json data
}

fail
{
	"code":fail code,//each fail code have it onwer means
	"desc":"fail",
	"result":{"msg":"the fail causes"}
}


other server error,such as network,it would happen between client and the server,it return 500


3)树状菜单数据类型查询(待定)
/moduleName/queryAllModules?strJson=
strJson
{
	"user_auth":"",
	"user_token":"",
	"data":{
			"codition":{},
			"order_by":{}
			}
}
返回的json数据
success
{
	"code":200,
	"desc":"success",
	"result":{"dataList":[],"total":totalNum}//model json data
}

fail
{
	"code":fail code,//each fail code have it onwer means
	"desc":"fail",
	"result":{"msg":"the fail causes"}
}

server error,catch it by server itself
{
	"code":0,
	"desc":"error",
	"result":{"msg":""}
}

other server error,such as network,it would happen between client and the server,it return 500









