API接口设计
	* 主网关：http://domain/v1/
	* json格式全部使用双引号"
接口说明：服务器操作错误全部返回
服务器端错误
{
	"code":0,
	"desc":"error",
	"msg":"the server have error cause"
}

其余下面的失败均是业务逻辑操作失败
同时所有的修改操作均是POST请求,所有的查询均是GET请求

1.注册接口:users/register?strJson=strJson
请求的数据strJson
{
	"data":{"user_alias_name":"keithl","user_email":"xxxx@163.com","user_pwd":base64("123456"),"user_auth":"encrpyt()"}//默认自定义别名
}
返回的json格式
成功:
{
	"code":200,
	"desc":"success",
	"result":{"user_alias_name":"keithl","user_email":"xxxx@163.com","user_pwd":base64("123456"),"user_auth":"encrpyt()","user_token":"tokenId","user_token_expires":7*60*60*24}
}

业务失败:
{
	"code":50001,
	"desc":"fail",
	"msg":""
}

服务器端其他错误：将返回500,此处错误主要是客户端与服务器建立连接时产生的错误，下面的类似

2.登录:users/login?strJson=strJson(GET)
请求的数据strJson
{
	"data":{"user_auth":"","user_token":"","user_token_expires":""}
}
返回的json数据
成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}
}
业务失败
{
	"code":50002,
	"desc":"fail",
	"msg":"login fail"
}

3.修改密码:users/updatePwd?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":"","user_pwd":"base64(pwd)","user_verify_code":""}//密码使用base64进行传输
}

成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}
}

业务失败
{
	"code":50003,
	"desc":"fail",
	"msg":"update pwd fail"
}

4.个人信息完善:users/detail?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":"","user_domain_desc":"","user_work_desc":""}
}

成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}
}
失败
{
	"code":50004,
	"desc":"fail",
	"msg":"update the user detail fail"
}

5.上传用户头像:users/uploadPhotoes?strJson=strJson&picture=bite data 
请求的数据
strJson
{
	"data":{"user_auth":"","user_token":""}
}
picture:form bit data

成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":"","user_pic_url":""}
}
失败
{
	"code":50004,
	"desc":"fail",
	"msg":"upload the picture fail"
}

6.用户添加标签:users/label?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":"","user_label_type":"8,9,39,"}//备注：最后有添加","作为分隔符
}
成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}
}
备注：不存在业务逻辑上的错误,只存在500以及服务器的错误0


7.用户添加位置：users/position?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":"","user_location_longitude":"","user_location_latitude":""}//备注：最后有添加","作为分隔符
}
成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}
}
备注：不存在业务逻辑上的错误,只存在500以及服务器的错误0


8.修改用户名称:users/editName?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":"","user_alias_name":""}//备注：最后有添加","作为分隔符
}
成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":""}
}
业务逻辑错误
失败
{
	"code":50005,
	"desc":"fail",
	"msg":"invalid user name"
}

9.查询用户：users/query?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":""}
}
返回的数据：
成功
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","user_token_expires":"","user_email":"","user_phone":"","user_alias_name":"",
	"user_sex":1,"user_location_longitude":"","user_location_latitude":"",
	"user_label_type":[
						{"type_code":"","type_code":""},
						{"type_code":"","type_code":""},
						{"type_code":"","type_code":""},
						... ...
						]
			 }
}

失败：
{
	"code":"",//50006：用户已过期，请重新登录,50007：用户不存在,50008：不合法用户
	"desc":"fail",
	"msg":"msg cause"
}

10.查询用户详情：users/queryForDetail?strJson=strJson
请求的数据
{
	"data":{"user_auth":"","user_token":""}
}
返回的数据
成功:
{
	"code":200,
	"desc":"success",
	"result":{"user_auth":"","user_token":"","photo_url":"the url","domain_desc":"","work_desc":""}
}
失败：
{
	"code":"",//50006：用户已过期，请重新登录,50007：用户不存在,50008：不合法用户
	"desc":"fail",
	"msg":"msg cause"
}


11.获取验证码:users/getVerifyCode
{
	"data":{"user_email":"","user_auth":"","user_token":""}
}











